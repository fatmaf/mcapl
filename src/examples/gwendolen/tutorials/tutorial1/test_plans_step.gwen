GWENDOLEN


:name: agent

:Initial Beliefs: 
location(l0)
location(l1)
location(l2)
location(l3)
location(l4)
location(l5)


plan_annotations(fullplan,[
	
	plan_annotation(fullplan,2,[at(l1),at(l2),at(l4),before(l2,l4),before(l1,l4)]),
	plan_annotation(fullplan,1,[at(l1),at(l2),at(l4),before(l1,l2),before(l2,l4),before(l1,l4)])
	])
	
plans(fullplan, [
	plan(fullplan,1,[move_to(l1),move_to(l2),move_to(l3),move_to(l4)]),
	plan(fullplan,2,[move_to(l2),move_to(l1),move_to(l5),move_to(l4)]) ])

specification([at(l1),at(l2),at(l4),before(l1,l2),before(l1,l4),before(l2,l4)])


:Reasoning Rules:

ismember(H, [H | T]);
ismember(H, [X | T]) :-
	ismember(H,T);
	
remove_last_from_list([X],[]);

remove_last_from_list([H|T],[H | NewL]) :-
	remove_last_from_list(T,NewL);


:Initial Goals:

satisfy_spec [achieve]


:Plans:

+!satisfy_spec [achieve] : { B remove_last_from_list([1,2,3,4],AList) } <- 
				print(AList),
				+satisfy_spec;
				
				
+!achieve_plan(Id,Ind) [achieve] : {B plan(Id,Ind,[])} <- +achieve_plan(Id,Ind), +satisfy_spec;

+!achieve_plan(Id,Ind) [achieve] : {B plan(Id,Ind,[move_to(X) | T])} <- move_to(X), sum(Ind,1,Z), +plan(Id,Z,T), +achieve_plan(Id,Ind),+!achieve_plan(Id,Z)[achieve];
+!achieve_plan(Id,Ind) [achieve] : {B plan(Id,Ind,[print(X) | T])} <- print(X), sum(Ind,1,Z), +plan(Id,Z,T), +achieve_plan(Id,Ind),+!achieve_plan(Id,Z)[achieve];


+at(X) : {True} <- print("at"), print(X);




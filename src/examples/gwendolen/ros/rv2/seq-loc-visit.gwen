
GWENDOLEN

:name: mrsdurani

:Initial Beliefs:

location(door)
location(bigtankfront)
location(bigtankside)
location(tank1top)
location(tank1right)
location(tank1bottom)
location(tank2top)
location(tank2left)
location(tank2bottom)
location(tankset)
location(pipes)
location(dangerroom)
location(stairs)

location(entrance)
location(dangerroomside)
location(dangerroomsideend)



location_coordinate(door,-8.18,-3.16,0.0)
location_coordinate(bigtankfront,-4.07,-7.24,0.0)
location_coordinate(bigtankside,-7.25,-5.26,0.0)
location_coordinate(tank1top,-0.49,-3.51,0.0)
location_coordinate(tank1right,2.30,-1.93,0.0)
location_coordinate(tank1bottom,5.48,-3.48,0.0)
location_coordinate(tank2top,-0.47,-6.52,0.0)
location_coordinate(tank2left,1.98,-7.88,0.0)
location_coordinate(tank2bottom,5.36,-6.31,0.0)
location_coordinate(tankset,6.80,-5.69,0.0)
location_coordinate(pipes,7.79,-2.67,0.0)
location_coordinate(dangerroom,1.30,2.20,0.0)
location_coordinate(stairs,2.94,8.56,0.0)

location_coordinate(entrance,-7.83, -0.57, 0.0)
location_coordinate(dangerroomside,-0.56, 0.52, 0.0)
location_coordinate(dangerroomsideend,4.20, 0.34,0.0)




free(door)
free(bigtankfront)
free(bigtankside)
free(tank1right)
free(tank1bottom)
free(tank2top)
free(tank2left)
free(tank2bottom)
free(tankset)
free(stairs)

free(entrance)
free(dangerroomside)
free(dangerroomsideend)

free(tank1top)

order(tank1top,dangerroom)
order(dangerroom,pipes)

:Reasoning Rules:

cantvisit(L1) :- failedtovisit(L1); 
cantvisit(L1) :- visited(L1);

:Initial Goals:


visit(tank1top) [achieve]
visit(dangerroom) [achieve]
visit(pipes) [achieve]
visit(tank2left) [achieve]

:Plans:



+!visit(L1) [achieve]: {B location(L1), B location_coordinate(L1,X,Y,Z), 
						B free(L1), ~B cantvisit(L1), ~B going(L2) } <- 
						+.lock, print("executing free"),print(L1),+going(L1), move(X,Y,0.0), -.lock; 
						
+!visit(L1) [achieve]: {B location(L1), B location_coordinate(L1,X,Y,Z), 
						B free(L1), ~B cantvisit(L1), B going(L2) } <- 
						do_nothing; 

+!visit(L1) [achieve]: {B location(L1), B location_coordinate(L1,X,Y,Z), 
						B free(L1), B cantvisit(L1)} <- 
						do_nothing; 






					


+!visit(L2) [achieve]: {B location(L2), B location_coordinate(L2,X,Y,Z),
						B location(L1), B order(L1,L2),
						B cantvisit(L1), ~B cantvisit(L2), ~B going(L3)} <- 
						+.lock,print("executing second order"), print(L2),+going(L2), move(X,Y,0.0), -.lock; 
						
+!visit(L2) [achieve]: {B location(L2), B location_coordinate(L2,X,Y,Z),
						B location(L1), B order(L1,L2), ~B cantvisit(L1), ~B cantvisit(L2)} <- 
						do_nothing; 
						
+!visit(L2) [achieve]: {B location(L2), B location_coordinate(L2,X,Y,Z),
						B location(L1), B order(L1,L2), 
						B location(L3), B going(L3)} <- 
						do_nothing; 
+!visit(L2) [achieve]: {B location(L2), B location_coordinate(L2,X,Y,Z),
						B location(L1), B order(L1,L2), B cantvisit(L1), B cantvisit(L2)} <- 
						do_nothing; 



+movebase_result(Id,3) : {B going(A)} <- 
							+.lock,
							-going(A),
							+visit(A),
							+visited(A),
							print("Visited "), 
							print(A),
							-.lock;
							
+movebase_result(Id,2) : {B going(A)} <- 
							+.lock,
							-going(A),
							+failedtovisit(A),
							+visit(A),
							print("Failed to visit preempted"), 
							print(A),
							-.lock;
							
+movebase_result(Id,4) : {B going(A)} <- 
							+.lock,
							-going(A),
							+failedtovisit(A),
							+visit(A),
							print("Failed to visit aborted"), 
							print(A),
							-.lock;
							
+movebase_result(Id,5) : {B going(A)} <- 
							+.lock,
							-going(A),
							+failedtovisit(A),
							+visit(A),
							print("Failed to visit rejected"), 
							print(A),
							-.lock;
